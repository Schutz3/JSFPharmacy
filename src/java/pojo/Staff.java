package pojo;
// Generated Oct 13, 2022 3:34:44 AM by Hibernate Tools 4.3.1

import dao.daoStaff;
import java.util.List;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;
import utility.imedUtil;




/**
 * Staff generated by hbm2java
 */
@ManagedBean (name = "stf")
public class Staff  implements java.io.Serializable {


     private Integer id;
     private String username;
     private String password;
     String Code = "minerva365";
     private String icode;
     
     
         public String login() {
        daoStaff ds = new daoStaff();
        List<Staff> st = ds.getBy(username, password);
        try {
            if (st != null) {
                username = st.get(0).username;
                password = st.get(0).password;
                HttpSession session = imedUtil.getSession();
		session.setAttribute("username", username);
                FacesContext.getCurrentInstance().addMessage(
			null,
			new FacesMessage(FacesMessage.SEVERITY_INFO,
				"YOU LOGGED IN AS: ",
				username));
                return "dashboard";
            } else{
                
            }
        } catch (Exception e) {
            System.out.println(e);
            FacesContext.getCurrentInstance().addMessage(
			null,
			new FacesMessage(FacesMessage.SEVERITY_ERROR,
				"LOGGIN ERROR:   ",
				"INCORRECT USERNAME OR PASSWORD!"));
            username = "";
            password = "";
        }
        return "index";
    }
    public String logout() {
	HttpSession session = imedUtil.getSession();
	session.invalidate();
        
	return "index";
    }
    
    public String regraff() {
        if(icode.equals(Code)){
           daoStaff add = new daoStaff();
         add.regstaff(this);
         FacesContext.getCurrentInstance().addMessage(
			null,
			new FacesMessage(FacesMessage.SEVERITY_INFO,
				"Success Registred As: "+username,
				"Try Login Now"));
        username = "";
        password = "";
        icode = "";
        return "index"; 
        }else{
            FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR,
							"FAILED TO REGISTER",
							"INVALID TOKEN"));
        username = "";
        password = "";
        icode = "";
        }
        return "index";
    }
    
    public String getByUsrId() {
        daoStaff stf = new daoStaff();
        List<Staff> listStf = stf.getByUsrID(username, id);
        try {

            if (!listStf.isEmpty()) {
                id = listStf.get(0).id;
                username = listStf.get(0).username;
                password = listStf.get(0).password;
                stf.editStf(password, id);
                FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_INFO,
							"SUCCESSFULLY UPDATED NEW PASSWORD!",
							"Try Login Now"));
                id = null;
                username = "";
                password = "";
                return "index";
            } else {
                FacesContext.getCurrentInstance().addMessage(
					null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR,
							"FAILED TO UPDATE PASSWORD",
							"Wrong Username OR ID"));
                id = null;
                username = "";
                password = "";
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return "index";
    }
    

    public Staff() {
    }

    public Staff(String username, String password) {
       this.username = username;
       this.password = password;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }
    
    public String getIcode() {
        return this.icode;
    }
    
    public void setIcode(String icode) {
        this.icode = icode;
    }




}


